{"version":3,"sources":["components/Background.tsx","state.ts","components/CameraControls.tsx","components/BoundingBox.tsx","components/Dragable.tsx","components/Model.tsx","components/Cars.tsx","components/Controller.tsx","components/Effects.tsx","components/Floor.tsx","components/Bulb.tsx","components/Lights.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Background","texture","useLoader","THREE","useThree","gl","scene","formatted","useMemo","image","height","fromEquirectangularTexture","background","sets","cameraPos","target","name","state","activeMesh","activeMeshName","shouldUpdate","CameraControls","useFrame","camera","getObjectByName","position","lerp","sceneObj","orbitControls","update","clone","sub","length","BoundingBox","props","children","offset","dimensions","visible","useBox","mass","args","ref","api","useEffect","current","userData","scale","wireframe","Dragable","groupRef","useRef","objects","controls","DragControls","domElement","transformGroup","addEventListener","e","enabled","object","set","copy","velocity","Model","path","meshProps","model","useGLTF","datas","useControls","animetion","useAnimations","animations","names","actions","reset","fadeIn","play","fadeOut","traverse","child","mesh","castShadow","receiveShadow","material","side","Cars","fallback","rotation","Math","PI","Controller","color","car1","button","updateState","car2","carNum","setState","getActiveMeshMaterial","getHexString","useCallback","Effects","useState","lights","setLights","focusDistance","focalLength","bokehScale","map","light","sun","uuid","Floor","transparent","opacity","Bulb","push","emissive","Lights","intensity","App","style","width","backgroundColor","shadows","OrbitControls","attach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73872478.chunk.js","sourcesContent":["import { FC, useMemo } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useLoader, useThree } from '@react-three/fiber';\r\n\r\nexport const Background: FC = () => {\r\n\tconst texture = useLoader(THREE.TextureLoader, '/assets/autoshop.jpg')\r\n\tconst { gl, scene } = useThree()\r\n\r\n\tconst formatted = useMemo(\r\n\t\t() =>\r\n\t\t\tnew THREE.WebGLCubeRenderTarget(texture.image.height).fromEquirectangularTexture(gl, texture),\r\n\t\t[gl, texture]\r\n\t)\r\n\tscene.background = formatted.texture\r\n\r\n\treturn null\r\n}\r\n","import * as THREE from 'three';\r\n\r\ntype Sets = {\r\n\t[key: number]: {\r\n\t\tcameraPos: [number, number, number]\r\n\t\ttarget: [number, number, number]\r\n\t\tname: string\r\n\t}\r\n}\r\n\r\nconst sets: Sets = {\r\n\t1: {\r\n\t\tcameraPos: [9, 2, 4],\r\n\t\ttarget: [4, 0, 0],\r\n\t\tname: 'Capot001_CAR_PAINT_0'\r\n\t},\r\n\t2: {\r\n\t\tcameraPos: [1, 2, 5],\r\n\t\ttarget: [-4, 0, 0],\r\n\t\tname: 'object005_bod_0'\r\n\t}\r\n}\r\n\r\ntype State = {\r\n\tactiveMesh: THREE.Mesh | null\r\n\tactiveMeshName: string\r\n\tcameraPos: THREE.Vector3\r\n\ttarget: THREE.Vector3\r\n\tshouldUpdate: boolean\r\n}\r\n\r\nexport const state: State = {\r\n\tactiveMesh: null,\r\n\tactiveMeshName: sets[1].name,\r\n\tcameraPos: new THREE.Vector3(...sets[1].cameraPos),\r\n\ttarget: new THREE.Vector3(...sets[1].target),\r\n\tshouldUpdate: true\r\n}\r\n\r\nexport const setState = (carNum: 1 | 2) => {\r\n\tconst set = sets[carNum]\r\n\tstate.cameraPos.set(...set.cameraPos)\r\n\tstate.target.set(...set.target)\r\n\tstate.activeMeshName = set.name\r\n\tstate.shouldUpdate = true\r\n}\r\n","import { FC } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { state } from '../state';\r\n\r\nexport const CameraControls: FC = () => {\r\n\tuseFrame(({ camera, scene }) => {\r\n\t\tif (!state.activeMesh || state.activeMesh.name !== state.activeMeshName) {\r\n\t\t\tstate.activeMesh = scene.getObjectByName(state.activeMeshName)! as THREE.Mesh\r\n\t\t}\r\n\r\n\t\tif (state.shouldUpdate) {\r\n\t\t\tcamera.position.lerp(state.cameraPos, 0.1)\r\n\t\t\tconst sceneObj = scene as any\r\n\t\t\tsceneObj.orbitControls.target.lerp(state.target, 0.1)\r\n\t\t\tsceneObj.orbitControls.update()\r\n\t\t\t// enable orbitControls\r\n\t\t\tconst diff = camera.position.clone().sub(state.cameraPos).length()\r\n\t\t\tif (diff < 0.1) state.shouldUpdate = false\r\n\t\t}\r\n\t})\r\n\r\n\treturn null\r\n}\r\n","import React, { FC, useEffect } from 'react';\r\nimport { useBox } from '@react-three/cannon';\r\n\r\ntype BoundingBoxProps = {\r\n\tchildren: React.ReactNode\r\n\tposition?: [number, number, number]\r\n\toffset?: [number, number, number]\r\n\tdimensions?: [number, number, number]\r\n\tvisible?: boolean\r\n}\r\n\r\nexport const BoundingBox: FC<BoundingBoxProps> = props => {\r\n\tconst {\r\n\t\tchildren,\r\n\t\tposition = [0, 0, 0],\r\n\t\toffset = [0, 0, 0],\r\n\t\tdimensions = [1, 1, 1],\r\n\t\tvisible = false\r\n\t} = props\r\n\r\n\tconst [ref, api] = useBox(() => ({ mass: 1, args: dimensions, position }))\r\n\r\n\tuseEffect(() => {\r\n\t\tref.current!.userData.api = api\r\n\t}, [api, ref])\r\n\r\n\treturn (\r\n\t\t<group ref={ref}>\r\n\t\t\t<mesh scale={dimensions} visible={visible}>\r\n\t\t\t\t<boxBufferGeometry />\r\n\t\t\t\t<meshPhysicalMaterial wireframe />\r\n\t\t\t</mesh>\r\n\t\t\t<group position={offset}>{children}</group>\r\n\t\t</group>\r\n\t)\r\n}\r\n","import { FC, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { DragControls } from 'three/examples/jsm/controls/DragControls';\r\nimport { PublicApi } from '@react-three/cannon';\r\nimport { GroupProps, useThree } from '@react-three/fiber';\r\n\r\ntype DragableProps = {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nexport const Dragable: FC<DragableProps> = ({ children }) => {\r\n\tconst groupRef = useRef<GroupProps>(null)\r\n\tconst { camera, gl, scene } = useThree()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst objects = groupRef.current!.children! as THREE.Object3D<Event>[]\r\n\t\tconst controls = new DragControls(objects, camera, gl.domElement)\r\n\t\tcontrols.transformGroup = true\r\n\r\n\t\tcontrols.addEventListener('dragstart', e => {\r\n\t\t\t// orbitControls disable\r\n\t\t\tconst sceneObj = scene as any\r\n\t\t\tsceneObj.orbitControls.enabled = false\r\n\t\t\t// set mass 0\r\n\t\t\tconst object = (e as any).object as THREE.Mesh\r\n\t\t\tconst api = object.userData.api as PublicApi\r\n\t\t\tapi && api.mass.set(0)\r\n\t\t})\r\n\t\tcontrols.addEventListener('dragend', e => {\r\n\t\t\t// orbitControls enable\r\n\t\t\tconst sceneObj = scene as any\r\n\t\t\tsceneObj.orbitControls.enabled = true\r\n\t\t\t// set mass 1\r\n\t\t\tconst object = (e as any).object as THREE.Mesh\r\n\t\t\tconst api = object.userData.api as PublicApi\r\n\t\t\tapi && api.mass.set(1)\r\n\t\t})\r\n\t\tcontrols.addEventListener('drag', e => {\r\n\t\t\tconst object = (e as any).object as THREE.Mesh\r\n\t\t\tconst api = object.userData.api as PublicApi\r\n\t\t\tif (api) {\r\n\t\t\t\tapi.position.copy(object.position)\r\n\t\t\t\tapi.velocity.set(0, 0, 0)\r\n\t\t\t}\r\n\t\t})\r\n\t}, [camera, gl.domElement, scene])\r\n\r\n\treturn <group ref={groupRef}>{children}</group>\r\n}\r\n","import { useControls } from 'leva';\r\nimport React, { FC, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useAnimations, useGLTF } from '@react-three/drei';\r\n\r\ntype ModelProps = {\r\n\tpath: string\r\n\tposition?: [number, number, number]\r\n\tscale: number\r\n}\r\n\r\nexport const Model: FC<ModelProps> = props => {\r\n\tconst { path, ...meshProps } = props\r\n\tconst model = useGLTF(path)\r\n\r\n\t// animation\r\n\tconst datas = useControls({ animetion: true })\r\n\r\n\tconst { ref, names, actions } = useAnimations(model.animations)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (datas.animetion) {\r\n\t\t\tactions[names[0]]?.reset().fadeIn(0.5).play()\r\n\t\t} else {\r\n\t\t\tactions[names[0]]?.fadeOut(0.5)\r\n\t\t}\r\n\t}, [actions, names, datas])\r\n\r\n\t// add shadow\r\n\tmodel.scene.traverse(child => {\r\n\t\tif (child instanceof THREE.Mesh) {\r\n\t\t\tconst mesh = child as THREE.Mesh\r\n\t\t\tmesh.castShadow = true\r\n\t\t\tmesh.receiveShadow = true\r\n\t\t\t;(mesh.material as THREE.Material).side = THREE.FrontSide\r\n\t\t}\r\n\t})\r\n\r\n\treturn <primitive ref={ref} object={model.scene} {...meshProps} />\r\n}\r\n","import React, { FC, Suspense } from 'react';\r\nimport { BoundingBox } from './BoundingBox';\r\nimport { Dragable } from './Dragable';\r\nimport { Model } from './Model';\r\n\r\nexport const Cars: FC = () => {\r\n\treturn (\r\n\t\t<Suspense fallback={null}>\r\n\t\t\t<Dragable>\r\n\t\t\t\t<BoundingBox visible position={[4, 2, 0]} dimensions={[3, 2, 6]} offset={[0, -0.4, 0.8]}>\r\n\t\t\t\t\t<Model path=\"/models/tesla_model_3/scene.gltf\" scale={0.01} />\r\n\t\t\t\t</BoundingBox>\r\n\t\t\t</Dragable>\r\n\t\t\t<Dragable>\r\n\t\t\t\t<BoundingBox visible position={[-4, 2, 0]} dimensions={[3, 2, 7]} offset={[0, -0.8, 0.2]}>\r\n\t\t\t\t\t<Model path=\"/models/tesla_model_s/scene.gltf\" scale={0.013} />\r\n\t\t\t\t</BoundingBox>\r\n\t\t\t</Dragable>\r\n\t\t\t<group rotation={[0, Math.PI / 2, 0]}>\r\n\t\t\t\t<Model path=\"/models/veribot/scene.gltf\" scale={1} />\r\n\t\t\t</group>\r\n\t\t</Suspense>\r\n\t)\r\n}\r\n","import { button, useControls } from 'leva';\r\nimport { FC, useCallback, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { setState, state } from '../state';\r\n\r\nexport const Controller: FC = () => {\r\n\tconst { scene } = useThree()\r\n\r\n\tconst [datas, set] = useControls(() => ({\r\n\t\tcolor: '#fff',\r\n\t\tcar1: button(() => updateState(1)),\r\n\t\tcar2: button(() => updateState(2))\r\n\t}))\r\n\r\n\tconst updateState = (carNum: 1 | 2) => {\r\n\t\tsetState(carNum)\r\n\t\tconst material = getActiveMeshMaterial()\r\n\t\tset({ color: `#${material.color.getHexString()}` })\r\n\t}\r\n\r\n\tconst getActiveMeshMaterial = useCallback(() => {\r\n\t\tconst activeMesh = scene.getObjectByName(state.activeMeshName) as THREE.Mesh\r\n\t\tconst material = activeMesh.material as THREE.MeshStandardMaterial\r\n\t\treturn material\r\n\t}, [scene])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (state.activeMesh) {\r\n\t\t\tconst material = getActiveMeshMaterial()\r\n\t\t\tmaterial.color.set(datas.color)\r\n\t\t}\r\n\t}, [datas, getActiveMeshMaterial])\r\n\r\n\treturn null\r\n}\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree } from '@react-three/fiber';\r\nimport { DepthOfField, EffectComposer, GodRays } from '@react-three/postprocessing';\r\n\r\nexport const Effects: FC = () => {\r\n\tconst [lights, setLights] = useState<\r\n\t\tReact.RefObject<THREE.Mesh<THREE.BufferGeometry, THREE.Material | THREE.Material[]>>[] | null\r\n\t>(null)\r\n\r\n\tconst { scene } = useThree()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (scene.userData.lights && scene.userData.lights.length === 3) {\r\n\t\t\t// console.log(scene.userData)\r\n\t\t\tsetLights(scene.userData.lights)\r\n\t\t}\r\n\t}, [scene.userData.lights])\r\n\r\n\treturn lights ? (\r\n\t\t<EffectComposer>\r\n\t\t\t<DepthOfField focusDistance={0} focalLength={0.02} bokehScale={2} height={480} />\r\n\t\t\t<>\r\n\t\t\t\t{lights.map(light => (\r\n\t\t\t\t\t<GodRays key={light.current!.uuid} sun={light.current!} />\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t</EffectComposer>\r\n\t) : null\r\n}\r\n","import { FC } from 'react';\r\nimport { useBox } from '@react-three/cannon';\r\n\r\ntype FloorProps = {\r\n\tposition: [number, number, number]\r\n}\r\n\r\nexport const Floor: FC<FloorProps> = props => {\r\n\tconst [ref] = useBox(() => ({ args: [200, 1, 200], ...props }))\r\n\r\n\treturn (\r\n\t\t<mesh ref={ref} {...props} receiveShadow>\r\n\t\t\t<boxBufferGeometry args={[200, 1, 200]} />\r\n\t\t\t<meshPhysicalMaterial transparent opacity={0.2} />\r\n\t\t</mesh>\r\n\t)\r\n}\r\n","import { FC, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { useThree } from '@react-three/fiber';\r\n\r\nexport const Bulb: FC<JSX.IntrinsicElements['mesh']> = props => {\r\n\tconst ref = useRef<THREE.Mesh>(null)\r\n\tconst { scene } = useThree()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (scene.userData.lights) scene.userData.lights.push(ref)\r\n\t\telse scene.userData.lights = [ref]\r\n\t}, [scene.userData])\r\n\r\n\treturn (\r\n\t\t<mesh ref={ref} {...props}>\r\n\t\t\t<pointLight\r\n\t\t\t\tcastShadow\r\n\t\t\t\tshadow-mapSize-width={1024}\r\n\t\t\t\tshadow-mapSize-height={1024}\r\n\t\t\t\tshadow-radius={10}\r\n\t\t\t/>\r\n\t\t\t<sphereBufferGeometry args={[0.2]} />\r\n\t\t\t<meshPhongMaterial emissive={new THREE.Color('yellow')} />\r\n\t\t</mesh>\r\n\t)\r\n}\r\n","import React, { FC } from 'react';\r\nimport { Bulb } from './Bulb';\r\n\r\nexport const Lights: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ambientLight intensity={0.2} />\r\n\t\t\t<directionalLight\r\n\t\t\t\tposition={[6, 3, 0]}\r\n\t\t\t\tintensity={2}\r\n\t\t\t\tshadow-mapSize-width={1024}\r\n\t\t\t\tshadow-mapSize-height={1024}\r\n\t\t\t\tshadow-radius={10}\r\n\t\t\t\tcastShadow\r\n\t\t\t/>\r\n\t\t\t<Bulb position={[-6, 3, 0]} />\r\n\t\t\t<Bulb position={[0, 3, 0]} />\r\n\t\t\t<Bulb position={[6, 3, 0]} />\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { FC, Suspense } from 'react';\nimport { Physics } from '@react-three/cannon';\nimport { OrbitControls } from '@react-three/drei';\nimport { Canvas } from '@react-three/fiber';\nimport { Background } from './components/Background';\nimport { CameraControls } from './components/CameraControls';\nimport { Cars } from './components/Cars';\nimport { Controller } from './components/Controller';\nimport { Effects } from './components/Effects';\nimport { Floor } from './components/Floor';\nimport { Lights } from './components/Lights';\n\nexport const App: FC = () => {\n\treturn (\n\t\t<div style={{ width: '100vw', height: '100vh' }}>\n\t\t\t<Canvas style={{ backgroundColor: 'black' }} camera={{ position: [7, 7, 7] }} shadows>\n\t\t\t\t{/* <fog attach=\"fog\" args={['white', 1, 10]} /> */}\n\t\t\t\t{/* controls */}\n\t\t\t\t<OrbitControls attach=\"orbitControls\" />\n\t\t\t\t<CameraControls />\n\t\t\t\t<Controller />\n\t\t\t\t{/* lights */}\n\t\t\t\t<Lights />\n\t\t\t\t{/* helpers */}\n\t\t\t\t<axesHelper args={[5]} />\n\t\t\t\t{/* background */}\n\t\t\t\t<Suspense fallback={null}>\n\t\t\t\t\t<Background />\n\t\t\t\t</Suspense>\n\t\t\t\t{/* objects */}\n\t\t\t\t<Physics>\n\t\t\t\t\t<Cars />\n\t\t\t\t\t<Floor position={[0, -0.5, 0]} />\n\t\t\t\t</Physics>\n\t\t\t\t{/* postprocessing */}\n\t\t\t\t<Effects />\n\t\t\t</Canvas>\n\t\t</div>\n\t)\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}